事前準備
・設計書を元に、CMS3でカテゴリ追加、バナー画像やピックアップ画像やメイン画像を追加しておく。
・DBの作成をする。
・DBに使用するエクステンションの情報を入れておく。
・layout,top,under,contens.blocksをコピーしてoriginalを作っておく。
・diffcheckerでスクリプトの差異を出して、layout,top,underのスクリプトを修正する。

layout
・headerとfooterをindex.htmlを開いてコピペしてくる。
・ミラーリンク不要なので消す。
・メガドロップダウンのエクステンション必要ならNotionから持ってくる。

top
・ミラーリンク不要なので消す。
・Container Contents Start以下を全てコピペしてくる。
・テンプレと比較しながら、twigを入れられそうな部分を当て込みする。
・エクステンションを多く使用するケースが多いので、慎重にエクステンションを使用する。
レスポンシブ対応メイン画像管理,メガドロップダウン,トップページバナー２か所。
・速報系カテゴリの表示件数の操作,速報系カテゴリの画像とaltを使用するケースも多いので、設計書をよく確認して
使う必要があればNotionから持ってくる。
・bannerとpickupはif文入れるが、ifで囲む範囲に注意。テンプレ通りではなく、そもそもbannerやpickupが始まったhtmlから囲う。
・すべてタグの時はsliceが使えるが、loop.indexでもよい。個人的には全てloop.indexでやった方が理解しやすい。
loop.indexは、forの直下に配置する。そうしないと値がif等でいじくられてエラーになる可能性があるかも？
・変数を定義する場面が何度かあるが、スコープを意識して、なるべく少ない回数で変数をsetしていきたい。
・バナー二箇所エクステンションを使用する場合は、テンプレ＋バナーが存在しているときというif文をバナーが始まったhtml文の上に作る。

under
・リンク不要なので消す。
・メガドロップダウンエクステンションが必要かどうか確認する。
・Ｌナビ無し→sideブロックの直下に配置する。
・下層ページでのカテゴリ名→contentsブロックの直下に配置する。
・BreadAreaの配置がテンプレと違うケースが多いので、注視して、テンプレに合わせる。

contents.blocks
・newsContentsブロックのみを当て込みする。


★ページアイコン振り分けエクステンションを使用すると、underやcontents.blocksのfor文の前にifで振り分ける箇所が不要になる。
★トップと下層の関連付けは注視する。下層等もしっかり表示で確認できるように、第二階層までページ・リンク・テキストを入力しておく。

☆DB作成方法
・trinity/public/cms-admin/configs/client-config.ymlでmysql -u root -pabcd0123 -h 127.0.0.1 cms3_tokoname(ディレクトリ名) < 003_patch2019-10-28.sqlのように、順番にsqlを追加していく。
・trinity/public/cms-admin/configs/client-config.ymlをvimで開いて、dbnameを自分で作成したものに変更する。

☆trinityの落とし方
・sshコピー
・git clone (sshのurl)
・trinityができるので、cdで移動
・git labのREADEME.mdを読む
・cp .env{.dist,}する
・cp Makefile.dist Makefileする
・make installする
・docker-compose up -dする
・publicのcms-adminのuploadedfilesの書き込み権限を付ける(chmod -R 777 uploadedFilesする)
