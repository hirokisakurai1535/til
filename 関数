　文字列操作関数
・strlen/mb_strlen...文字列の長さを取得する。文字数を取得したい場合は「mb_strlen」を使う。
・strcmp/strcasecamp...文字列の比較をする。基本的に大文字と小文字は区別されるが、区別したくない場合は「strcasecmp」を使う。
・substr/mb_substr...文字列を取り出す。日本語を用いる場合は「mb_substr」を使う。
・trim...先頭と末尾の空白を取り除く。先頭だけを対象にする場合は「ltrim」,末尾だけを対象にする場合は「rrim」を使う。
・substr_replace/preg_replace...文字列を置換する。
・strpos/preg_match...文字列を探す。
・strstr...指定文字以降の文字列を取得する。
・substr_count...文字列をカウントする。(文字列1, 文字列2)
・str_repeat...文字列の反復をする。(文字列, 反復回数)
・str_pad...文字埋めをする。
・strlen() や strpos() で日本語を扱うにはマルチバイトに対応した別の関数を使う必要があって、
mb_strlen() 、 mb_strpos() を使ってあげる必要がある

数学系の関数
・ceil,floor,round...順に、小数点以下切り上げ、切り捨て、整数で四捨五入。
・mt_rand...乱数を作る。
・max/min...最大値,最小値を求める。
・array_unshift,array_push,array_shift,array_pop...順に、配列の文頭に要素を追加、末尾に追加、文頭の要素を削除、末尾の要素を削除。
・array_slice(配列,位置,個数)で配列から指定した数の要素を取り出せる。
・array_splice(配列,位置,個数)で、配列から指定した位置と個数の要素を削除して出力できる。
array_splice(配列,位置,個数,要素)で、削除した要素の部分に新しい要素を追加できる。
・sort/rsort...配列を小さい順に並べてくれる。大きい順に並べてくれる。キーも指定されている配列では、asort/arsortを使う。
キーの方でソートしたい場合は、ksort/krsortを使う。
・shuffle...実行するたびに値をランダムに変える。
・array_rand...要素をランダムに出力する。
・平均を一発で出す関数は無いので、array?sum() / count() で求める。
・array_merge...要素の連結。
・array_unique...要素内の重複している部分を削除してくれる。
・array_diff...配列同士の差異を確認して、差異の部分を出力してくれる。
・array_map...全ての配列に対して、一括で処理できる関数。
・array_keys/array_values...キーも指定されている配列で、キーだけ、値だけ取り出したい時に使う関数。
・
