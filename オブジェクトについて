<?php
//　クラス
class Post
{
//　プロパティ
  public $text;
  public $likes;
  //　メソッド
  public function show() {
    printf('%s (%d)' . PHP_EOL, $this->text, $this->likes);
  }
}

$posts = [];
$posts[0] = ['text' => 'hello', 'likes' => 0];
$posts[1] = ['text' => 'hello again', 'likes' => 0];

function show($post)
{
  printf('%s (%d)' . PHP_EOL, $post['text'], $post['likes']);
}

show($posts[0]);
show($posts[1]);

・ここで定義した構造のことを「クラス」...クラスは頭文字大文字の慣習がある。
・クラスの中で宣言した変数は「プロパティ」
・クラスの中で定義した関数は「メソッド」

・クラスからnewを作って、作られた値を「インスタンス」
・newしたときに実行される特殊なメソッドを「コンストラクタ」
・publicやprivateはアクセス修飾子と呼ばれていて、privateにすれば、そのクラス内でしかそのプロパティが使えない状態になる。
・static...クラスに紐づいた変数を定義する際に使う。定数の場合はconstでok。const(定数)の場合は慣習として、全て大文字で、$も不要。
・class 新しいクラス extends 元々あるクラス で、元々あるクラスのプロパティやメソッドをそのまま引き継いで使用できる。
・親クラスが無い、親クラスでは使っていないプロパティを使用する場合は、$this->プロパティ = $プロパティ;
・親クラスでも使用しているプロパティを使用する場合は、親クラスのコンストラクタを使用できる。parent::__construct();
・親クラスでも使用しているメソッドを子クラスでも使うことを、overrideと言う。
親クラスのプロパティがprivateの場合は、protectedに変更しないとエラーになる。protected＝親クラスと継承したクラスでも使える。
・overrideを禁止する場合は、メソッドのアクセス修飾子の前にfinalを付ける。
